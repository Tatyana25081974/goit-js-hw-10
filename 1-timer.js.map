{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\nconst startButton = document.querySelector('button[data-start]');\nconst datePicker = document.getElementById('datetime-picker');\nconst daysSpan = document.querySelector('[data-days]');\nconst hoursSpan = document.querySelector('[data-hours]');\nconst minutesSpan = document.querySelector('[data-minutes]');\nconst secondsSpan = document.querySelector('[data-seconds]');\n\n// Ініціалізація Flatpickr\nflatpickr(datePicker, {\n  enableTime: true, //Дозволяє вибирати час разом із датою.\n  time_24hr: true,//Задає 24-годинний формат для вибору часу\n  defaultDate: new Date(),//Встановлює поточну дату та час як значення за замовчуванням\n  minuteIncrement: 1,//Дозволяє збільшувати або зменшувати час на 1 хвилину при налаштуванні.\n    onClose(selectedDates) {\n      //обробка закриття календаря:\n    const selectedDate = selectedDates[0];//Отримує обрану дату.\n    if (selectedDate <= new Date()) {\n      iziToast.error({\n        title: \"Error\",\n        message: \"Please choose a date in the future\",\n        position: \"topRight\",\n      });\n      startButton.disabled = true;//Кнопка \"Start\" стає неактивною (startButton.disabled = true).\n    } else {\n      userSelectedDate = selectedDate;//Обрана дата зберігається в змінній userSelectedDate\n      startButton.disabled = false;//Кнопка \"Start\" стає активною (startButton.disabled = false).\n    }\n  },\n});\n\n// Логіка таймера.Ця функція перетворює час у мілісекундах на кількість днів, годин, хвилин і секунд.\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);//// Кількість днів\n  const hours = Math.floor((ms % day) / hour);//// Кількість годин\n  const minutes = Math.floor(((ms % day) % hour) / minute);//// Кількість хвилин\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);//// Кількість секунд\n\n  return { days, hours, minutes, seconds };\n}\n//Функція addLeadingZero використовується для форматування чисел, щоб зробити їх двозначними (додавши провідний нуль). \nfunction addLeadingZero(value) {\n  return String(value).padStart(2, \"0\");\n}\n//Ця функція оновлює текстовий вміст елементів на сторінці (дні, години, хвилини, секунди).Всі значення спочатку форматуються через addLeadingZero, а потім вставляються у відповідні елементи HTML.\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  daysSpan.textContent = addLeadingZero(days);\n  hoursSpan.textContent = addLeadingZero(hours);\n  minutesSpan.textContent = addLeadingZero(minutes);\n  secondsSpan.textContent = addLeadingZero(seconds);\n}\n//Ця функція запускає зворотний відлік і періодично оновлює інтерфейс.\nfunction startCountdown() {\n  startButton.disabled = true;// Вимикає кнопку \"Start\".\n  datePicker.disabled = true;// Вимикає поле вибору дати.\n\n  timerInterval = setInterval(() => {\n    const now = new Date(); // Поточний час.\n    const timeDifference = userSelectedDate - now;// Різниця в часі.\n\n    if (timeDifference <= 0) {\n      clearInterval(timerInterval);// Зупиняє таймер.\n      updateTimerUI({ days: 0, hours: 0, minutes: 0, seconds: 0 });// Обнуляє значення.\n      datePicker.disabled = false;// Дозволяє вибрати нову дату.\n      return;\n    }\n\n    const timeLeft = convertMs(timeDifference);\n    updateTimerUI(timeLeft); // Оновлює інтерфейс.\n  }, 1000);// Оновлення кожну секунду.\n}\n\nstartButton.addEventListener('click', startCountdown);//Викликає функцію startCountdown, яка починає зворотний відлік.\n"],"names":["userSelectedDate","timerInterval","startButton","datePicker","daysSpan","hoursSpan","minutesSpan","secondsSpan","flatpickr","selectedDates","selectedDate","iziToast","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerUI","startCountdown","timeDifference","timeLeft"],"mappings":"2GAKA,IAAIA,EAAmB,KACnBC,EAAgB,KAEpB,MAAMC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAa,SAAS,eAAe,iBAAiB,EACtDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAG3DC,EAAUL,EAAY,CACpB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQM,EAAe,CAEvB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAClB,CAAO,EACDT,EAAY,SAAW,KAEvBF,EAAmBU,EACnBR,EAAY,SAAW,GAE1B,CACH,CAAC,EAGD,SAASU,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAGA,SAASC,EAAc,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxDb,EAAS,YAAcc,EAAeJ,CAAI,EAC1CT,EAAU,YAAca,EAAeH,CAAK,EAC5CT,EAAY,YAAcY,EAAeF,CAAO,EAChDT,EAAY,YAAcW,EAAeD,CAAO,CAClD,CAEA,SAASI,GAAiB,CACxBnB,EAAY,SAAW,GACvBC,EAAW,SAAW,GAEtBF,EAAgB,YAAY,IAAM,CAEhC,MAAMqB,EAAiBtB,EADX,IAAI,KAGhB,GAAIsB,GAAkB,EAAG,CACvB,cAAcrB,CAAa,EAC3BmB,EAAc,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAC3DjB,EAAW,SAAW,GACtB,MACD,CAED,MAAMoB,EAAWX,EAAUU,CAAc,EACzCF,EAAcG,CAAQ,CACvB,EAAE,GAAI,CACT,CAEArB,EAAY,iBAAiB,QAASmB,CAAc"}